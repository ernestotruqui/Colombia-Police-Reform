PATH <- "E://Files/HaHaHariss/22Winter/Policy Lab/Data"
## load libraries####
library(readxl)
library(sf)
library(ggplot2)
library(dplyr)
library(lubridate)
library(tidyverse)
## load libraries####
library(readxl)
library(sf)
library(ggplot2)
library(dplyr)
library(lubridate)
library(tidyverse)
# Pre-processing Crime Data ####
clean_crime_data <- function(df_crime){
df_crime$lat <- str_replace(df_crime$lat, ',' , '.')
df_crime$lon <- str_replace(df_crime$lon, ',' , '.')
return(df_crime)
}
read_crime_data <- function(fname, sname, path = PATH){
df <- read_xlsx(file.path(PATH, fname), sheet = sname)
if ('cod_dane' %in% colnames(df)) {
df <- filter(df, as.numeric(cod_dane) == 5001000)
df <- mutate(df, time = as.numeric(hour(time)))
}
else {
df <- filter(df, zone == "05001000")
}
df <- clean_crime_data(df) %>%
mutate(crime_type = sname) %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
select(c(crime_type, date, time, geometry))
}
merge_crime_data <- function(fname, path = PATH){
names <- excel_sheets(file.path(path, fname))[c(2,3,4,5)]
df <- data.frame(matrix(nrow = 0, ncol = 4))
colnames(df) <- c('crime_type', 'date', 'time', 'geometry')
for (name in names) {
df_temp <- read_crime_data(fname, name)
df <- rbind(df, df_temp)
}
# rename crime types
crime_types <- c('vehicle theft', 'theft', 'homicide', 'burglary')
df$crime_type[df$crime_type %in% names] <- crime_types[match(df$crime_type, names, nomatch = 0)]
# turn time into shifts
df$shift <- ifelse(df$time %in% c(5,6,7,8,9,10,11,12),'5-13',
ifelse(df$time %in% c(13,14,15,16,17,18,19,20),
'13-21','21-5'))
return(df)
}
df_crime19 <- merge_crime_data('CrimesV2.xlsx')
# Pre-processing Shapefile ####
clean_shp <- function(df_shp){
df_shp <- df_shp[!substr(as.character(df_shp$NRO_CUADRA),13,13) %in% c('6','7'),]
return(df_shp)
}
p2p <- function(df_crime,df_shp){
pnts <- data.frame('x' = unlist(map(df_crime$geometry,1)),
'y' = unlist(map(df_crime$geometry,2)))
# create a points collection
pnts_sf <- do.call("st_sfc",c(lapply(1:nrow(pnts),
function(i) {st_point(as.numeric(pnts[i, ]))}), list("crs" = 4326)))
# apply transformation to pnts sf
pnts_trans <- st_transform(pnts_sf, 2163)
tt1_trans <- st_transform(df_shp, 2163)
pnts$region <- apply(st_intersects(tt1_trans, pnts_trans, sparse = FALSE), 2,
function(col) {
tt1_trans[which(col), ]$NRO_CUADRA
})
df_crime$NRO_CUADRA <- as.character(pnts$region)
return(df_crime)
}
# Clean Data
df_shp <- clean_shp(st_read(file.path(PATH, '07_Cuadrantes')))
df_crime19 <- p2p(df_crime19, df_shp)
# Summarise to Quadrants Shift Level ####
change_to_shift <- function(df_crime, shp = df_shp){
df_quad <- data.frame(NRO_CUADRA = rep(shp$NRO_CUADRA, 3),
shift = rep(c("21-5", "5-13", "13-21"), each = 286))
df_temp <- df_crime %>% group_by(NRO_CUADRA, shift) %>%
summarise(homicide = sum(crime_type == 'homicide'),
theft = sum(crime_type == 'theft'),
vehicle_theft= sum(crime_type == 'vehicle theft'),
burglary = sum(crime_type == 'burglary'),
sum = n())
df_quad <- merge(df_quad, df_temp, by = c('NRO_CUADRA','shift'), all.x = T)
df_quad[is.na(df_quad)] <- 0
return(df_quad)
}
df_shift <- change_to_shift(df_crime19)
df_shift <- df_shift %>%
st_as_sf()
ggplot() +
geom_sf(data = df_shift %>% filter(shift == "5-13"),
aes(fill = sum))
df_shift$geometry
ggplot() +
geom_sf(data = df_shp)
ggplot() +
geom_sf(data = df_shit[df_shift$shift=='5-13',])
ggplot() +
geom_sf(data = df_shift[df_shift$shift=='5-13',])
class(df_shift$geometry)
class(df_shp$geometry)
df_shift <- change_to_shift(df_crime19)
class(df_shift$geometry)
ggplot() +
geom_sf(data = df_shift[df_shift$shift=='5-13',])
df_shift <- df_shift %>% st_as_sf()
class(st_cast(df_shift$geometry))
st_cast(df_shift$geometry,'MULTIPOLYGON')
st_cast(df_shift$geometry,'POLYGON')
st_cast(df_shift$geometry,'POINT')
df_shift$geometry
View(df_crime19)
View(df_shp)
View(df_shift)
df_test <- left_join(df_shift[,c(1:7)],df_shp[,c(2,13)], by = 'NRO_CUADRA')
View(df_shp)
df_shp[,c(2,13)]
df_shift[,c(1:7)]
df_test <- st_join(df_shift[,c(1:7)],df_shp[,c(2,13)], by = 'NRO_CUADRA')
df_test <- st_join(df_shift[,c(1:7)],df_shp[,c(2,13)], join = 'NRO_CUADRA')
order(c(1,4,56,3,0))
sort(c(1,4,56,3,0))
order(df_shp$NRO_CUADRA)
sort(df_shp$NRO_CUADRA)
df_test <- merge(df_shift[,c(1:7)],df_shp[,c(2,13)], all = T)
class(df_shift[,c(1:7)])
df_shift <- change_to_shift(df_crime19)
class(df_shift[,c(1:7)])
df_test <- merge(df_shift[,c(1:7)],df_shp[,c(2,13)], all = T)
View(df_test)
class(df_test
)
df_test <- st_as_sf(df_test)
class(df_test)
class(df_test$geometry)
ggplot() +
geom_sf(data = df_test[df_test$shift=='5-13',])
# Set Environment####
## set wd and path####
PATH <- "E://Files/HaHaHariss/22Winter/Policy Lab/Data"
# PATH <- "C:/Users/52322/OneDrive - The University of Chicago/Documents/Harris/2022 Winter/Policy Lab/Data/Data"
## load libraries####
library(readxl)
library(sf)
library(ggplot2)
library(dplyr)
library(lubridate)
library(tidyverse)
# Pre-processing Crime Data ####
clean_crime_data <- function(df_crime){
df_crime$lat <- str_replace(df_crime$lat, ',' , '.')
df_crime$lon <- str_replace(df_crime$lon, ',' , '.')
return(df_crime)
}
read_crime_data <- function(fname, sname, path = PATH){
df <- read_xlsx(file.path(PATH, fname), sheet = sname)
if ('cod_dane' %in% colnames(df)) {
df <- filter(df, as.numeric(cod_dane) == 5001000)
df <- mutate(df, time = as.numeric(hour(time)))
}
else {
df <- filter(df, zone == "05001000")
}
df <- clean_crime_data(df) %>%
mutate(crime_type = sname) %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
select(c(crime_type, date, time, geometry))
}
merge_crime_data <- function(fname, path = PATH){
names <- excel_sheets(file.path(path, fname))[c(2,3,4,5)]
df <- data.frame(matrix(nrow = 0, ncol = 4))
colnames(df) <- c('crime_type', 'date', 'time', 'geometry')
for (name in names) {
df_temp <- read_crime_data(fname, name)
df <- rbind(df, df_temp)
}
# rename crime types
crime_types <- c('vehicle theft', 'theft', 'homicide', 'burglary')
df$crime_type[df$crime_type %in% names] <- crime_types[match(df$crime_type, names, nomatch = 0)]
# turn time into shifts
df$shift <- ifelse(df$time %in% c(5,6,7,8,9,10,11,12),'5-13',
ifelse(df$time %in% c(13,14,15,16,17,18,19,20),
'13-21','21-5'))
return(df)
}
df_crime19 <- merge_crime_data('CrimesV2.xlsx')
# Pre-processing Shapefile ####
clean_shp <- function(df_shp){
df_shp <- df_shp[!substr(as.character(df_shp$NRO_CUADRA),13,13) %in% c('6','7'),]
return(df_shp)
}
p2p <- function(df_crime,df_shp){
pnts <- data.frame('x' = unlist(map(df_crime$geometry,1)),
'y' = unlist(map(df_crime$geometry,2)))
# create a points collection
pnts_sf <- do.call("st_sfc",c(lapply(1:nrow(pnts),
function(i) {st_point(as.numeric(pnts[i, ]))}), list("crs" = 4326)))
# apply transformation to pnts sf
pnts_trans <- st_transform(pnts_sf, 2163)
tt1_trans <- st_transform(df_shp, 2163)
pnts$region <- apply(st_intersects(tt1_trans, pnts_trans, sparse = FALSE), 2,
function(col) {
tt1_trans[which(col), ]$NRO_CUADRA
})
df_crime$NRO_CUADRA <- as.character(pnts$region)
return(df_crime)
}
# Clean Data
df_shp <- clean_shp(st_read(file.path(PATH, '07_Cuadrantes')))
df_crime19 <- p2p(df_crime19, df_shp)
# Summarise to Quadrants Shift Level ####
change_to_shift <- function(df_crime, shp = df_shp){
df_quad <- data.frame(NRO_CUADRA = rep(shp$NRO_CUADRA, 3),
shift = rep(c("21-5", "5-13", "13-21"), each = 286))
df_temp <- df_crime %>% group_by(NRO_CUADRA, shift) %>%
summarise(homicide = sum(crime_type == 'homicide'),
theft = sum(crime_type == 'theft'),
vehicle_theft= sum(crime_type == 'vehicle theft'),
burglary = sum(crime_type == 'burglary'),
sum = n())
df_quad <- merge(df_quad, df_temp, by = c('NRO_CUADRA','shift'), all.x = T)
df_quad[is.na(df_quad)] <- 0
df_quad <- merge(df_quad[,c(1:7)],shp[,c(2,13)], all = T)
df_quad <- st_as_sf(df_quad)
return(df_quad)
}
df_shift <- change_to_shift(df_crime19)
# Visualization ####
p_count_crime <- function(df, colname){
p <- ggplot(df, aes(x = df[,colname])) +
geom_histogram(binwidth = 1) +
theme_classic() +
ggtitle(paste('Number of Crimes per Quad Shift(2019):', colname))
print(p)
return(p)
}
# plot
p_homicide <- p_count_crime(df_shift, 'homicide')
p_sum <- p_count_crime(df_shift,'sum')
# Visualization ####
p_count_crime <- function(df, colname){
p <- ggplot(df, aes(x = df[,colname])) +
geom_histogram(binwidth = 1) +
theme_classic() +
ggtitle(paste('Number of Crimes per Quad Shift(2019):', colname))
print(p)
return(p)
}
# plot
p_homicide <- p_count_crime(df_shift, 'homicide')
# plot
p_homicide <- p_count_crime(st_drop_geometry(df_shift), 'homicide')
# Visualization ####
p_count_crime <- function(df, colname){
p <- ggplot(st_drop_geometry(df), aes(x = st_drop_geometry(df)[,colname])) +
geom_histogram(binwidth = 1) +
theme_classic() +
ggtitle(paste('Number of Crimes per Quad Shift(2019):', colname))
print(p)
return(p)
}
# plot
p_homicide <- p_count_crime(df_shift, 'homicide')
p_sum <- p_count_crime(df_shift,'sum')
ggplot() +
geom_sf(data = df_shift[df_shift$shift=='5-13',])
install.packages('rgeos')
install.packages('rgdal')
# Set Environment####
## set path and options####
options(scipen = 999)
PATH <- "E://Files/HaHaHariss/22Winter/Policy Lab/Data"
# PATH <- "C:/Users/52322/OneDrive - The University of Chicago/Documents/Harris/2022 Winter/Policy Lab/Data/Data"
## load libraries####
library(readxl)
library(sf)
library(ggplot2)
#install.packages("reshape2")
library(reshape2)
library(plyr)
library(dplyr)
library(lubridate)
library(tidyverse)
#install.packages("leaflet")
library(leaflet)
library(ggeasy)
library(rgeos)
library(rgdal)
# Data Cleaning ####
## Pre-processing Crime Data ####
clean_crime_data <- function(df_crime){
df_crime$lat <- str_replace(df_crime$lat, ',' , '.')
df_crime$lon <- str_replace(df_crime$lon, ',' , '.')
return(df_crime)
}
read_crime_data <- function(fname, sname, path = PATH){
df <- read_xlsx(file.path(PATH, fname), sheet = sname)
if ('cod_dane' %in% colnames(df)) {
df <- filter(df, as.numeric(cod_dane) == 5001000)
df <- mutate(df, time = as.numeric(hour(time)))
}
else {
df <- filter(df, zone == "05001000")
}
df <- clean_crime_data(df) %>%
mutate(crime_type = sname) %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
select(c(crime_type, date, time, geometry))
}
merge_crime_data <- function(fname, path = PATH){
names <- excel_sheets(file.path(path, fname))[c(2,3,4,5)]
df <- data.frame(matrix(nrow = 0, ncol = 4))
colnames(df) <- c('crime_type', 'date', 'time', 'geometry')
for (name in names) {
df_temp <- read_crime_data(fname, name)
df <- rbind(df, df_temp)
}
# rename crime types
crime_types <- c('vehicle theft', 'theft', 'homicide', 'burglary')
df$crime_type[df$crime_type %in% names] <- crime_types[match(df$crime_type, names, nomatch = 0)]
# turn time into shifts
df$shift <- ifelse(df$time %in% c(5,6,7,8,9,10,11,12),'5-13',
ifelse(df$time %in% c(13,14,15,16,17,18,19,20),
'13-21','21-5'))
return(df)
}
### run ####
df_crime19 <- merge_crime_data('CrimesV2.xlsx')
## Pre-processing Shapefile ####
clean_shp <- function(df_shp){
df_shp <- df_shp[!substr(as.character(df_shp$NRO_CUADRA), 13, 13) %in% c('6', '7'),]
df_shp <- df_shp[is.na(df_shp$SUBESTACIO),]
df_shp <- df_shp[which(df_shp$ESTACION!='SAN ANTONIO DE PRADO'),]
df_shp <- df_shp[-which(df_shp$NRO_CUADRA %in% c('MEVALMNVCCD03E03C03000008',
'MEVALMNVCCD04E02C03000028')),]
# df_shp <- df_shp[which(df_shp$CAI!='CAI LAS PALMAS'),]
colnames(df_shp)[which(names(df_shp) == "NRO_CUADRA")] <- 'region'
return(df_shp)
}
# clean_shp_old <- function(df_shp){
#  df_shp <- df_shp[,'COD_DANE_A']
#  colnames(df_shp)[which(names(df_shp) == "COD_DANE_A")] <- 'region'
#  return(df_shp)
#}
p2p <- function(df_crime, df_shp){
pnts <- data.frame('x' = unlist(map(df_crime$geometry, 1)),
'y' = unlist(map(df_crime$geometry, 2)))
# create a points collection
pnts_sf <- do.call("st_sfc", c(lapply(1:nrow(pnts),
function(i) {st_point(as.numeric(pnts[i, ]))}), list("crs" = 4326)))
# apply transformation to pnts sf
pnts_trans <- st_transform(pnts_sf, 2163)
tt1_trans <- st_transform(df_shp, 2163)
pnts$region <- apply(st_intersects(tt1_trans, pnts_trans, sparse = FALSE), 2,
function(col) {
tt1_trans[which(col), ]$region
})
df_crime$region <- as.character(pnts$region)
return(df_crime)
}
### run ####
# Get block level data
# df_shp_old <- clean_shp_old(st_read(file.path(PATH, 'manzanas_MEVAL.shp')))
# df_crime19_old <- p2p(df_crime19, df_shp_old)
# df_crime19_old$region <- as.numeric(df_crime19_old$region)
# df_crim19_old <- na.omit(df_crime19_old)
df_shp <- clean_shp(st_read(file.path(PATH, '07_Cuadrantes')))
ghana <- readOGR("GHA_adm", "GHA_adm1")
gTouches(df_shp, byid=TRUE)
df_shp_sp <- as(df_shp,Class = "Spatial")
gTouches(df_shp_sp, byid=TRUE)
matrix_shp <- gTouches(df_shp_sp, byid=TRUE)
View(matrix_shp)
matrix_shp <- as.numeric(matrix_shp)
matrix_shp <- gTouches(df_shp_sp, byid=TRUE)
df_shp_sp <- as(df_shp,Class = "Spatial")
matrix_shp <- 1 * gTouches(df_shp_sp, byid=TRUE)
View(matrix_shp)
df_shp_ap
df_shp_sp
?gTouches
df_shp_sp$OBJECTID
df_shp_sp$region
View(matrix_shp)
head(df_shp_sp,10)
df_shp_sp$region[1]
df_shp_sp$OBJECTID[1]
colnames(matrix_shp)
rownames(matrix_shp)
colnames(matrix_shp) <- df_shp_sp$region
rownames(matrix_shp) <- df_shp_sp$region
shp2mat <- function(df_shp){
df_shp_sp <- as(df_shp,Class = "Spatial")
matrix_shp <- 1*gTouches(df_shp_sp, byid=TRUE)
colnames(matrix_shp) <- df_shp_sp$region
rownames(matrix_shp) <- df_shp_sp$region
return(matrix_shp)
}
shp2mtx <- function(df_shp){
df_shp_sp <- as(df_shp,Class = "Spatial")
matrix_shp <- 1*gTouches(df_shp_sp, byid=TRUE)
colnames(matrix_shp) <- df_shp_sp$region
rownames(matrix_shp) <- df_shp_sp$region
return(matrix_shp)
}
mtx_shp <- shp2mtx(df_shp)
